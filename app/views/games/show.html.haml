.row
  .span5
    .well.p0header.header
      = current_game.p0.email
      - if current_game.play.characters
        as:
        .label.label-info= current_game.play.characters[0].name.capitalize
      .p.character-desc
  .span2
    %h3.js-current-beat
  .span5
    .well.p1header.header
      = current_game.p1.email
      - if current_game.play.characters
        as:
        .label.label-important= current_game.play.characters[1].name.capitalize
      .p.character-desc
.js-loading
  Loading...
.js-choose-character{:style => "display: none"}
  .row
    - GamePlay.character_names.each do |name|
      %a.btn{charactername: name}
        = name
        = badges(character_badges(name))
.js-in-game{:style => "display: none"}
  .row
    .js-p0
      .span2.funny-well
        %h4.heading Tokens
        .collapsable.js-tokens
      .span2
        .funny-well
          %h4.heading Styles
          .collapsable.js-styles
        .funny-well
          %h4.heading Discard 1
          .collapsable.js-discard1
      .span2
        .funny-well
          %h4.heading Bases
          .collapsable.js-bases
        .funny-well
          %h4.heading Discard 2
          .collapsable.js-discard2
    .js-p1
      .span2
        .funny-well
          %h4.heading Styles
          .collapsable.js-styles
        .funny-well
          %h4.heading Discard 1
          .collapsable.js-discard1
      .span2
        .funny-well
          %h4.heading Bases
          .collapsable.js-bases
        .funny-well
          %h4.heading Discard 2
          .collapsable.js-discard2
      .span2.funny-well
        %h4.heading Tokens
        .collapsable.js-tokens

  .row
    .span2.js-p0.funny-well.life
    .board
      .span1.space.s0
      .span1.space.s1
      .span1.space.s2
      .span1.space.s3
      .span1.space.s4
      .span1.space.s5
      .span1.space.s6
    .span2.js-p1.offset1.funny-well.life
  .row
    .span3
      .well.js-current-effects.js-p0
    .span6
      .well.event-log
        %h6 Game log
        %p Event here!
        %p another event!
        %p event log is great!
    .span3
      .well.js-current-effects.js-p1
  .row.attack-pairs
    .span6
      .js-p0.attack-pair.row
        .span3
          .style.real
            .well
              .name
              .rpp
                .range
                .power
                .priority
              .effects
        .span3
          .base.real
            .well
              .name
              .rpp
                .range
                .power
                .priority
              .effects
      .js-p0.special-action.row
        .span6.special-action-card
          .well
            .name
            .rpp
              .range
              .power
              .priority
            .effects
      .row.js-p0
        .offset2.span2.js-finalize-attack-pair{:style => "display: none"}
          .btn.js-submit-attack-pair Submit
    .span6
      .js-p1.attack-pair.row
        .span3
          .style.real
            .well
              .name
              .rpp
                .range
                .power
                .priority
              .effects
        .span3
          .base.real
            .well
              .name
              .rpp
                .range
                .power
                .priority
              .effects
      .js-p1.special-action.row
        .span6.special-action-card
          .well
            .name
            .rpp
              .range
              .power
              .priority
            .effects
      .row.js-p1
        .offset2.span2.js-finalize-attack-pair{:style => "display: none"}
          .btn.js-submit-attack-pair Submit
  .js-answers
  .free-form
    .row
      .span4.offset4
        %form
          %input{:type => "text", :style => "width: 100%"}
#template-card{:style => "display: none"}
  .preview
    .rpp
      .range
      .power
      .priority
    .effects

%script{:src => "/javascripts/game.js"}
:javascript
  Game.init("#{@player_id}", "#{params[:id]}")
